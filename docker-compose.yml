services:
  db:
    image: postgres:13
    restart: always
    env_file: .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build: .
    restart: always
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - ./staticfiles:/app/staticfiles
    command: >
      sh -c "python manage.py migrate --noinput &&
             python manage.py collectstatic --noinput &&
             gunicorn mysite.wsgi:application --bind 0.0.0.0:8000 --workers 3"
    extra_hosts:
      - "host.docker.internal:host-gateway"  # Necesario en Linux para mapear host.docker.internal

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./ssl/nginx.crt:/etc/nginx/certs/fullchain.pem
      - ./ssl/nginx.key:/etc/nginx/certs/privkey.pem
    depends_on:
      - web

volumes:
  postgres_data: